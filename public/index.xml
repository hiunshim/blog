<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>My New Hugo Site</title>
    <link>http://example.org/</link>
    <description>Recent content on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Mar 2023 19:18:05 -0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Maximum Sum of Two Non Overlapping Subarrays</title>
      <link>http://example.org/posts/maximum-sum-of-two-non-overlapping-subarrays/</link>
      <pubDate>Thu, 09 Mar 2023 19:18:05 -0800</pubDate>
      
      <guid>http://example.org/posts/maximum-sum-of-two-non-overlapping-subarrays/</guid>
      <description>This problem is from LeetCode 1039.
We are given two lengths of the two subarrays. We have to find the max value of the sum of the two subarrays. This looks like a complicate problem but it is simple.
First, we need a way to quickly calculate the sum of a subarray. This can be done with &amp;ldquo;prefix sum&amp;rdquo; where we add the items in the array cumulatively. The two subarrays cannot be overlapping, so we need a way to guarantee that they do not overlap.</description>
    </item>
    
    <item>
      <title>Node Coloring</title>
      <link>http://example.org/posts/node-coloring/</link>
      <pubDate>Tue, 07 Mar 2023 12:48:33 -0800</pubDate>
      
      <guid>http://example.org/posts/node-coloring/</guid>
      <description>I learned something interesting today. I was solving a problem called &amp;ldquo;All Paths from Source Lead to Destination&amp;rdquo; and comparing it to &amp;ldquo;Find if Path Exists in Graph&amp;rdquo;. Both problems are very similar because they both require you to find a path from a source to a destination in a graph. The latter requires me to finf if &amp;ldquo;any&amp;rdquo; path exists, but the former is slightly hard because I have to find whether &amp;ldquo;all&amp;rdquo; paths lead to a destination.</description>
    </item>
    
  </channel>
</rss>
